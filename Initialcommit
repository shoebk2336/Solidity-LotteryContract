

// SPDX-License-Identifier: MIT
pragma solidity < 18.0.18;

contract Lottery {

    address payable [] public participants;

    address public Manager  ;

    constructor(){
        Manager=msg.sender;
    }

    function participate () payable public {

         require(msg.value ==3 ether,"Ether are not suffuicient");
         participants.push(payable (msg.sender));
    }

    function GetBalance() public view  returns (uint) {
        require(msg.sender==Manager,"You are not Manager");
        return address(this).balance;
    }

    function random() public pure returns (uint){
        return 1;
    }

    function Winner() payable public {
        require(Manager==msg.sender);
        require(participants.length>=3);
        uint r=random();

        uint index ;
        index=r%participants.length;
        
        address payable _winner=participants[index];
        _winner.transfer(GetBalance());
        participants=new address payable [](0);
    }
}
